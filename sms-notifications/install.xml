<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ @author  Alexander Vakhovski (AlexWaha)
  ~ @link    https://alexwaha.com
  ~ @email   support@alexwaha.com
  ~ @license GPLv3
  -->
<modification>
	<name>Alexwaha.com - UT5_ORDERS_2102</name>
    <code>aw_ut5_orders</code>
    <version>1.0</version>
    <author>alexwaha</author>
    <link>https://alexwaha.com</link>
    <file path="admin/controller/sale/order.php">
            <search><![CDATA[protected function getList() {]]></search>
            <add position="before"><![CDATA[
    //aw sms notify
	public function sendOrderStatusSms($order_id, $order_status_id) {
		$awModuleConfig = $this->awCore->getConfig('aw_sms_notify');

		$this->load->model('checkout/order');
		//SMS send with order status
		if ($awModuleConfig->get('sms_notify_order_alert') && $awModuleConfig->get('sms_notify_order_status') && in_array($order_status_id, $awmoduleconfig->get('sms_notify_order_status'))) {

			$order_info = $this->model_checkout_order->getOrder($order_id);

			if($order_info['language_id']){
				$language_id = $order_info['language_id'];
			}else{
				$language_id = $this->config->get('config_language_id');
			}

			$phone = $this->awCore->prepareNumber($order_info['telephone']);

			if ($phone) {
				$sms_status_template = $awmoduleconfig->get('sms_notify_status_template');

				$check_customer = $this->customerGroup($order_info);

				if ($check_customer) {
					$message = $this->prepareMessage($order_info, $sms_status_template[$order_status_id][$language_id], $order_status_id);

					$this->addOrderHistory($order_id, $order_status_id, $message);

					$this->sendMessage($phone, $message);
				}
			}
		}
	}

	private function prepareMessage($order_data = array(), $template, $order_status_id = false) {
		$this->load->model('checkout/order');

		$awModuleConfig = $this->awCore->getConfig('aw_sms_notify');

		if($order_status_id){
			$order_status_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_status WHERE order_status_id = '" . (int) $order_status_id . "' AND language_id = '" . (int) $order_data['language_id'] . "'");
		}else{
			$order_status_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_status WHERE order_status_id = '" . (int) $order_data['order_status_id'] . "' AND language_id = '" . (int) $order_data['language_id'] . "'");
		}

		if ($order_status_query->num_rows) {
			$order_status = $order_status_query->row['name'];
		} else {
			$order_status = false;
		}

		$shipping_cost = 0;
		$order_total_noship = 0;

		if ($this->config->get('shipping_status')) {
			$order_shipping_query = $this->db->query("SELECT * FROM " . DB_PREFIX . "order_total WHERE order_id = '" . (int) $order_data['order_id'] . "' AND code = 'shipping'");

			if ($order_shipping_query->num_rows) {
				$shipping_cost = $this->currency->format($order_shipping_query->row['value'], $order_data['currency_code'], $order_data['currency_value']);
				$order_total_noship = $order_data['total'] ? $order_data['total'] - $order_shipping_query->row['value'] : '';
			}
		}

		$query_order_product_total = $this->db->query("SELECT COUNT(*) AS total FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int) $order_data['order_id'] . "'");

		$query_order_product = $this->db->query("SELECT name, model, price, quantity FROM " . DB_PREFIX . "order_product WHERE order_id = '" . (int) $order_data['order_id'] . "'");

		$products = array();

		foreach ($query_order_product->rows as $product) {
			$products[] = array(
				'name'     => $product['name'],
				'model'    => $product['model'],
				'price'    => $this->currency->format($product['price'], $order_data['currency_code'], $order_data['currency_value']),
				'quantity' => $product['quantity']
			);
		}

		$data['order_date'] = $order_data['date_added']?: '';
		$data['current_date'] = date('d.m.Y');
		$data['current_time'] = date('H:i');
		$data['store_name'] = $order_data['store_name'] ? $order_data['store_name'] : $this->config->get('config_name');
		$data['store_url'] = $order_data['store_url'] ? $order_data['store_url'] : HTTP_SERVER;
		$data['firstname'] = $order_data['firstname'] ?: '';
		$data['lastname']  = $order_data['lastname'] ?: '';
		$data['order_id']  = $order_data['order_id'] ?: '';
		$data['order_total'] = $order_data['total'] ? $this->currency->format($order_data['total'], $order_data['currency_code'], $order_data['currency_value']) : '';
		$data['order_total_noship'] = $order_total_noship ? $this->currency->format($order_total_noship, $order_data['currency_code'], $order_data['currency_value']) : '';
		$data['order_phone'] = $order_data['telephone'] ?: '';
		$data['order_track_no'] = isset($order_data['track_no']) ?: '';
		$data['order_status'] = $order_status;
		$data['payment_method']  = $order_data['payment_method'] ?: '';
		$data['payment_city'] = $order_data['payment_city'] ?: '';
		$data['payment_address'] = $order_data['payment_address_1'] ?: '';
		$data['shipping_method'] = $order_data['shipping_method'] ?: '';
		$data['shipping_cost']  = $shipping_cost;
		$data['shipping_city']  = $order_data['shipping_city'] ?: '';
		$data['shipping_address'] = $order_data['shipping_address_1'];
		$data['product_total']  = $query_order_product_total->row['total'];
		$data['products']  = $products;

        $message = $this->awCore->view($template, $data, true);

        $result = html_entity_decode($message, ENT_QUOTES, 'UTF-8');

        if ($awmoduleconfig->get('sms_notify_translit')) {
            return $this->awCore->cyrillicToLatin($result);
        } else {
            return $result;
        }
	}

    private function customerGroup($order) {
        $this->load->model('account/customer');

        $awModuleConfig = $this->awCore->getConfig('aw_sms_notify');

        $sms_customer_group = $awmoduleconfig->get('sms_notify_customer_group');
        $config_customer_group_id = $this->config->get('config_customer_group_id');

        $customer = [];

        if($order['customer_id']) {
            $customer = $this->model_account_customer->getCustomer($order['customer_id']);
        }

        $result = true;

        if ($sms_customer_group) {
            if (in_array($config_customer_group_id, $sms_customer_group)) {
                $result = true;
            } else {
                $result = false;
            }

            if ($customer && in_array($customer['customer_group_id'], $sms_customer_group)) {
                $result = true;
            } else {
                $result = false;
            }
        }

        return $result;
    }

	private function addOrderHistory($order_id, $order_status_id, $message){
		$this->db->query("INSERT INTO " . DB_PREFIX . "order_history SET order_id = '" . (int)$order_id . "', order_status_id = '" . (int)$order_status_id . "', notify = '1', comment = '" . $this->db->escape($message) . "', date_added = NOW()");
	}

    private function sendMessage($phone, $message, $copy = false) {
    	$awModuleConfig = $this->awCore->getConfig('aw_sms_notify');

		$options = array(
			'to'       => $phone,
			'copy'	   => $copy,
			'from'     => $awmoduleconfig->get('sms_notify_from'),
			'username' => $awmoduleconfig->get('sms_notify_gate_username'),
			'password' => $awmoduleconfig->get('sms_notify_gate_password'),
			'message'  => $message,
		);

        $dispatcher = new Alexwaha\SmsDispatcher(
            $awmoduleconfig->get('sms_notify_gatename'),
            $options,
            $awmoduleconfig->get('sms_notify_log_filename')
        );
        $dispatcher->send();
    }
                ]]>
            </add>
        </operation>
    </file>
  <file path="admin/controller/sale/order.php">
	<operation>
      <search>
        <![CDATA[$res = $this->model_sale_order->setOrderStatus($order_id, $order_status_id);]]>
      </search>
      <add position="after">
        <![CDATA[
		$this->sendOrderStatusSms($order_id, $order_status_id);
		]]>
      </add>
    </operation>
  </file>
</modification>